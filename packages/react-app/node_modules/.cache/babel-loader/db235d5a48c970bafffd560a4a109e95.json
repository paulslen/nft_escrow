{"ast":null,"code":"var _jsxFileName = \"/home/leniu/dev/nft_escrow/packages/react-app/src/components/FaucetHint.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button } from \"antd\";\nimport React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { useBalance, useGasPrice } from \"eth-hooks\";\nimport { getRPCPollTime, Transactor } from \"../helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FaucetHint({\n  localProvider,\n  targetNetwork,\n  address\n}) {\n  _s();\n\n  const [faucetClicked, setFaucetClicked] = useState(false);\n  const localProviderPollingTime = getRPCPollTime(localProvider); // fetch local balance\n\n  const yourLocalBalance = useBalance(localProvider, address, localProviderPollingTime); // get gas Price from network\n\n  const gasPrice = useGasPrice(targetNetwork, \"fast\", localProviderPollingTime); // Faucet Tx can be used to send funds from the faucet\n\n  const faucetTx = Transactor(localProvider, gasPrice);\n  let faucetHint = \"\";\n\n  if (!faucetClicked && localProvider && localProvider._network && localProvider._network.chainId === 31337 && yourLocalBalance && ethers.utils.formatEther(yourLocalBalance) <= 0) {\n    faucetHint = /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        right: 65,\n        top: 65\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => {\n          faucetTx({\n            to: address,\n            value: ethers.utils.parseEther(\"0.01\")\n          });\n          setFaucetClicked(true);\n        },\n        children: \"\\uD83D\\uDCB0 Grab funds from the faucet \\u26FD\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n\n  return faucetHint;\n}\n\n_s(FaucetHint, \"Y1RHSta3s5qXT0cswlngyiDRt0A=\", false, function () {\n  return [useBalance, useGasPrice];\n});\n\n_c = FaucetHint;\nexport default FaucetHint;\n\nvar _c;\n\n$RefreshReg$(_c, \"FaucetHint\");","map":{"version":3,"sources":["/home/leniu/dev/nft_escrow/packages/react-app/src/components/FaucetHint.jsx"],"names":["Button","React","useState","ethers","useBalance","useGasPrice","getRPCPollTime","Transactor","FaucetHint","localProvider","targetNetwork","address","faucetClicked","setFaucetClicked","localProviderPollingTime","yourLocalBalance","gasPrice","faucetTx","faucetHint","_network","chainId","utils","formatEther","position","right","top","to","value","parseEther"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,MAAvB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,WAAxC;AAEA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,YAA3C;;;AAEA,SAASC,UAAT,CAAoB;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA,aAAjB;AAAgCC,EAAAA;AAAhC,CAApB,EAA+D;AAAA;;AAC7D,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,KAAD,CAAlD;AAEA,QAAMY,wBAAwB,GAAGR,cAAc,CAACG,aAAD,CAA/C,CAH6D,CAK7D;;AACA,QAAMM,gBAAgB,GAAGX,UAAU,CAACK,aAAD,EAAgBE,OAAhB,EAAyBG,wBAAzB,CAAnC,CAN6D,CAQ7D;;AACA,QAAME,QAAQ,GAAGX,WAAW,CAACK,aAAD,EAAgB,MAAhB,EAAwBI,wBAAxB,CAA5B,CAT6D,CAW7D;;AACA,QAAMG,QAAQ,GAAGV,UAAU,CAACE,aAAD,EAAgBO,QAAhB,CAA3B;AAEA,MAAIE,UAAU,GAAG,EAAjB;;AAEA,MACE,CAACN,aAAD,IACAH,aADA,IAEAA,aAAa,CAACU,QAFd,IAGAV,aAAa,CAACU,QAAd,CAAuBC,OAAvB,KAAmC,KAHnC,IAIAL,gBAJA,IAKAZ,MAAM,CAACkB,KAAP,CAAaC,WAAb,CAAyBP,gBAAzB,KAA8C,CANhD,EAOE;AACAG,IAAAA,UAAU,gBACR;AAAK,MAAA,KAAK,EAAE;AAAEK,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,KAAK,EAAE,EAA/B;AAAmCC,QAAAA,GAAG,EAAE;AAAxC,OAAZ;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,OAAO,EAAE,MAAM;AACbR,UAAAA,QAAQ,CAAC;AACPS,YAAAA,EAAE,EAAEf,OADG;AAEPgB,YAAAA,KAAK,EAAExB,MAAM,CAACkB,KAAP,CAAaO,UAAb,CAAwB,MAAxB;AAFA,WAAD,CAAR;AAIAf,UAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,SARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AAED,SAAOK,UAAP;AACD;;GA3CQV,U;UAMkBJ,U,EAGRC,W;;;KATVG,U;AA6CT,eAAeA,UAAf","sourcesContent":["import { Button } from \"antd\";\nimport React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { useBalance, useGasPrice } from \"eth-hooks\";\n\nimport { getRPCPollTime, Transactor } from \"../helpers\";\n\nfunction FaucetHint({ localProvider, targetNetwork, address }) {\n  const [faucetClicked, setFaucetClicked] = useState(false);\n\n  const localProviderPollingTime = getRPCPollTime(localProvider);\n\n  // fetch local balance\n  const yourLocalBalance = useBalance(localProvider, address, localProviderPollingTime);\n\n  // get gas Price from network\n  const gasPrice = useGasPrice(targetNetwork, \"fast\", localProviderPollingTime);\n\n  // Faucet Tx can be used to send funds from the faucet\n  const faucetTx = Transactor(localProvider, gasPrice);\n\n  let faucetHint = \"\";\n\n  if (\n    !faucetClicked &&\n    localProvider &&\n    localProvider._network &&\n    localProvider._network.chainId === 31337 &&\n    yourLocalBalance &&\n    ethers.utils.formatEther(yourLocalBalance) <= 0\n  ) {\n    faucetHint = (\n      <div style={{ position: \"absolute\", right: 65, top: 65 }}>\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            faucetTx({\n              to: address,\n              value: ethers.utils.parseEther(\"0.01\"),\n            });\n            setFaucetClicked(true);\n          }}\n        >\n          üí∞ Grab funds from the faucet ‚õΩÔ∏è\n        </Button>\n      </div>\n    );\n  }\n\n  return faucetHint;\n}\n\nexport default FaucetHint;\n"]},"metadata":{},"sourceType":"module"}