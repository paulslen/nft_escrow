{"ast":null,"code":"var _jsxFileName = \"/home/leniu/dev/nft_escrow/packages/react-app/src/components/Account.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button } from \"antd\";\nimport React from \"react\";\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\nimport Address from \"./Address\";\nimport Balance from \"./Balance\";\nimport Wallet from \"./Wallet\";\n/** \n  ~ What it does? ~\n\n  Displays an Address, Balance, and Wallet as one Account component,\n  also allows users to log in to existing accounts and log out\n\n  ~ How can I use? ~\n\n  <Account\n    address={address}\n    localProvider={localProvider}\n    userProvider={userProvider}\n    mainnetProvider={mainnetProvider}\n    price={price}\n    web3Modal={web3Modal}\n    loadWeb3Modal={loadWeb3Modal}\n    logoutOfWeb3Modal={logoutOfWeb3Modal}\n    blockExplorer={blockExplorer}\n    isContract={boolean}\n  />\n\n  ~ Features ~\n\n  - Provide address={address} and get balance corresponding to the given address\n  - Provide localProvider={localProvider} to access balance on local network\n  - Provide userProvider={userProvider} to display a wallet\n  - Provide mainnetProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\")\n  - Provide price={price} of ether and get your balance converted to dollars\n  - Provide web3Modal={web3Modal}, loadWeb3Modal={loadWeb3Modal}, logoutOfWeb3Modal={logoutOfWeb3Modal}\n              to be able to log in/log out to/from existing accounts\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\n**/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Account({\n  address,\n  userSigner,\n  localProvider,\n  mainnetProvider,\n  price,\n  minimized,\n  web3Modal,\n  loadWeb3Modal,\n  logoutOfWeb3Modal,\n  blockExplorer,\n  isContract\n}) {\n  _s();\n\n  const {\n    currentTheme\n  } = useThemeSwitcher();\n  let accountButtonInfo;\n\n  if (web3Modal === null || web3Modal === void 0 ? void 0 : web3Modal.cachedProvider) {\n    accountButtonInfo = {\n      name: \"Logout\",\n      action: logoutOfWeb3Modal\n    };\n  } else {\n    accountButtonInfo = {\n      name: \"Connect\",\n      action: loadWeb3Modal\n    };\n  }\n\n  const display = !minimized && /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [address && /*#__PURE__*/_jsxDEV(Address, {\n      address: address,\n      ensProvider: mainnetProvider,\n      blockExplorer: blockExplorer,\n      fontSize: 20\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Balance, {\n      address: address,\n      provider: localProvider,\n      price: price,\n      size: 20\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), !isContract && /*#__PURE__*/_jsxDEV(Wallet, {\n      address: address,\n      provider: localProvider,\n      signer: userSigner,\n      ensProvider: mainnetProvider,\n      price: price,\n      color: currentTheme === \"light\" ? \"#1890ff\" : \"#2caad9\",\n      size: 22,\n      padding: \"0px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    children: [display, web3Modal && /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        marginLeft: 8\n      },\n      shape: \"round\",\n      onClick: accountButtonInfo.action,\n      children: accountButtonInfo.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Account, \"T2iaHPZs5m3kZHwJkpRFqcj29Ew=\", false, function () {\n  return [useThemeSwitcher];\n});\n\n_c = Account;\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["/home/leniu/dev/nft_escrow/packages/react-app/src/components/Account.jsx"],"names":["Button","React","useThemeSwitcher","Address","Balance","Wallet","Account","address","userSigner","localProvider","mainnetProvider","price","minimized","web3Modal","loadWeb3Modal","logoutOfWeb3Modal","blockExplorer","isContract","currentTheme","accountButtonInfo","cachedProvider","name","action","display","marginLeft"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,MAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,SAASC,OAAT,CAAiB;AAC9BC,EAAAA,OAD8B;AAE9BC,EAAAA,UAF8B;AAG9BC,EAAAA,aAH8B;AAI9BC,EAAAA,eAJ8B;AAK9BC,EAAAA,KAL8B;AAM9BC,EAAAA,SAN8B;AAO9BC,EAAAA,SAP8B;AAQ9BC,EAAAA,aAR8B;AAS9BC,EAAAA,iBAT8B;AAU9BC,EAAAA,aAV8B;AAW9BC,EAAAA;AAX8B,CAAjB,EAYZ;AAAA;;AACD,QAAM;AAAEC,IAAAA;AAAF,MAAmBhB,gBAAgB,EAAzC;AAEA,MAAIiB,iBAAJ;;AACA,MAAIN,SAAJ,aAAIA,SAAJ,uBAAIA,SAAS,CAAEO,cAAf,EAA+B;AAC7BD,IAAAA,iBAAiB,GAAG;AAAEE,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,MAAM,EAAEP;AAA1B,KAApB;AACD,GAFD,MAEO;AACLI,IAAAA,iBAAiB,GAAG;AAAEE,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,MAAM,EAAER;AAA3B,KAApB;AACD;;AAED,QAAMS,OAAO,GAAG,CAACX,SAAD,iBACd;AAAA,eACGL,OAAO,iBACN,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEA,OAAlB;AAA2B,MAAA,WAAW,EAAEG,eAAxC;AAAyD,MAAA,aAAa,EAAEM,aAAxE;AAAuF,MAAA,QAAQ,EAAE;AAAjG;AAAA;AAAA;AAAA;AAAA,YAFJ,eAIE,QAAC,OAAD;AAAS,MAAA,OAAO,EAAET,OAAlB;AAA2B,MAAA,QAAQ,EAAEE,aAArC;AAAoD,MAAA,KAAK,EAAEE,KAA3D;AAAkE,MAAA,IAAI,EAAE;AAAxE;AAAA;AAAA;AAAA;AAAA,YAJF,EAKG,CAACM,UAAD,iBACC,QAAC,MAAD;AACE,MAAA,OAAO,EAAEV,OADX;AAEE,MAAA,QAAQ,EAAEE,aAFZ;AAGE,MAAA,MAAM,EAAED,UAHV;AAIE,MAAA,WAAW,EAAEE,eAJf;AAKE,MAAA,KAAK,EAAEC,KALT;AAME,MAAA,KAAK,EAAEO,YAAY,KAAK,OAAjB,GAA2B,SAA3B,GAAuC,SANhD;AAOE,MAAA,IAAI,EAAE,EAPR;AAQE,MAAA,OAAO,EAAE;AARX;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAqBA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEK,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA,eACGA,OADH,EAEGV,SAAS,iBACR,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAEW,QAAAA,UAAU,EAAE;AAAd,OAAf;AAAkC,MAAA,KAAK,EAAC,OAAxC;AAAgD,MAAA,OAAO,EAAEL,iBAAiB,CAACG,MAA3E;AAAA,gBACGH,iBAAiB,CAACE;AADrB;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GArDuBf,O;UAaGJ,gB;;;KAbHI,O","sourcesContent":["import { Button } from \"antd\";\nimport React from \"react\";\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\n\nimport Address from \"./Address\";\nimport Balance from \"./Balance\";\nimport Wallet from \"./Wallet\";\n\n/** \n  ~ What it does? ~\n\n  Displays an Address, Balance, and Wallet as one Account component,\n  also allows users to log in to existing accounts and log out\n\n  ~ How can I use? ~\n\n  <Account\n    address={address}\n    localProvider={localProvider}\n    userProvider={userProvider}\n    mainnetProvider={mainnetProvider}\n    price={price}\n    web3Modal={web3Modal}\n    loadWeb3Modal={loadWeb3Modal}\n    logoutOfWeb3Modal={logoutOfWeb3Modal}\n    blockExplorer={blockExplorer}\n    isContract={boolean}\n  />\n\n  ~ Features ~\n\n  - Provide address={address} and get balance corresponding to the given address\n  - Provide localProvider={localProvider} to access balance on local network\n  - Provide userProvider={userProvider} to display a wallet\n  - Provide mainnetProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\")\n  - Provide price={price} of ether and get your balance converted to dollars\n  - Provide web3Modal={web3Modal}, loadWeb3Modal={loadWeb3Modal}, logoutOfWeb3Modal={logoutOfWeb3Modal}\n              to be able to log in/log out to/from existing accounts\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\n**/\n\nexport default function Account({\n  address,\n  userSigner,\n  localProvider,\n  mainnetProvider,\n  price,\n  minimized,\n  web3Modal,\n  loadWeb3Modal,\n  logoutOfWeb3Modal,\n  blockExplorer,\n  isContract,\n}) {\n  const { currentTheme } = useThemeSwitcher();\n\n  let accountButtonInfo;\n  if (web3Modal?.cachedProvider) {\n    accountButtonInfo = { name: \"Logout\", action: logoutOfWeb3Modal };\n  } else {\n    accountButtonInfo = { name: \"Connect\", action: loadWeb3Modal };\n  }\n\n  const display = !minimized && (\n    <span>\n      {address && (\n        <Address address={address} ensProvider={mainnetProvider} blockExplorer={blockExplorer} fontSize={20} />\n      )}\n      <Balance address={address} provider={localProvider} price={price} size={20} />\n      {!isContract && (\n        <Wallet\n          address={address}\n          provider={localProvider}\n          signer={userSigner}\n          ensProvider={mainnetProvider}\n          price={price}\n          color={currentTheme === \"light\" ? \"#1890ff\" : \"#2caad9\"}\n          size={22}\n          padding={\"0px\"}\n        />\n      )}\n    </span>\n  );\n\n  return (\n    <div style={{ display: \"flex\" }}>\n      {display}\n      {web3Modal && (\n        <Button style={{ marginLeft: 8 }} shape=\"round\" onClick={accountButtonInfo.action}>\n          {accountButtonInfo.name}\n        </Button>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}