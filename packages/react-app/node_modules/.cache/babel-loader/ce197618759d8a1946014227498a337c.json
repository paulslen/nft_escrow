{"ast":null,"code":"import { create } from \"ipfs-http-client\";\nimport { BufferList } from \"bl\";\nexport const ipfs = create({\n  host: \"ipfs.infura.io\",\n  port: \"5001\",\n  protocol: \"https\"\n});\nexport async function addToIPFS(file) {\n  const fileAdded = await ipfs.add(file);\n  return fileAdded;\n}\nexport function urlFromCID(cid) {\n  return `https://ipfs.infura.io/ipfs/${cid}`;\n}\nexport async function getFromIPFS(hashToGet) {\n  for await (const file of ipfs.cat(hashToGet)) {\n    const content = new BufferList(file).toString();\n    return content;\n  }\n}","map":{"version":3,"sources":["/home/leniu/dev/nft_escrow/packages/react-app/src/helpers/ipfs.js"],"names":["create","BufferList","ipfs","host","port","protocol","addToIPFS","file","fileAdded","add","urlFromCID","cid","getFromIPFS","hashToGet","cat","content","toString"],"mappings":"AAAA,SAASA,MAAT,QAAuB,kBAAvB;AACA,SAASC,UAAT,QAA2B,IAA3B;AACA,OAAO,MAAMC,IAAI,GAAGF,MAAM,CAAC;AAAEG,EAAAA,IAAI,EAAE,gBAAR;AAA0BC,EAAAA,IAAI,EAAE,MAAhC;AAAwCC,EAAAA,QAAQ,EAAE;AAAlD,CAAD,CAAnB;AAEP,OAAO,eAAeC,SAAf,CAAyBC,IAAzB,EAA+B;AACpC,QAAMC,SAAS,GAAG,MAAMN,IAAI,CAACO,GAAL,CAASF,IAAT,CAAxB;AAEA,SAAOC,SAAP;AACD;AAED,OAAO,SAASE,UAAT,CAAoBC,GAApB,EAAyB;AAC9B,SAAQ,+BAA8BA,GAAI,EAA1C;AACD;AAED,OAAO,eAAeC,WAAf,CAA2BC,SAA3B,EAAsC;AAC3C,aAAW,MAAMN,IAAjB,IAAyBL,IAAI,CAACY,GAAL,CAASD,SAAT,CAAzB,EAA8C;AAC5C,UAAME,OAAO,GAAG,IAAId,UAAJ,CAAeM,IAAf,EAAqBS,QAArB,EAAhB;AAEA,WAAOD,OAAP;AACD;AACF","sourcesContent":["import { create } from \"ipfs-http-client\";\nimport { BufferList } from \"bl\";\nexport const ipfs = create({ host: \"ipfs.infura.io\", port: \"5001\", protocol: \"https\" });\n\nexport async function addToIPFS(file) {\n  const fileAdded = await ipfs.add(file);\n\n  return fileAdded;\n}\n\nexport function urlFromCID(cid) {\n  return `https://ipfs.infura.io/ipfs/${cid}`;\n}\n\nexport async function getFromIPFS(hashToGet) {\n  for await (const file of ipfs.cat(hashToGet)) {\n    const content = new BufferList(file).toString();\n\n    return content;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}