{"ast":null,"code":"var _jsxFileName = \"/home/leniu/dev/nft_escrow/packages/react-app/src/components/WalletImport.jsx\",\n    _s = $RefreshSig$();\n\nimport { ethers } from \"ethers\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Input } from \"antd\";\nimport Address from \"./Address\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WalletImport({\n  setShowImport\n}) {\n  _s();\n\n  const [importMnemonic, setImportMnemonic] = useState();\n  const [importMnemonicIndex, setImportMnemonicIndex] = useState(\"0\");\n  const [password, setPassword] = useState(\"\");\n  const [importPrivatekey, setImportPrivatekey] = useState();\n  const [importAddress, setImportAddress] = useState();\n  useEffect(() => {\n    const calculatePK = async () => {\n      if (importMnemonic) {\n        const ethersSeed = ethers.utils.mnemonicToSeed(importMnemonic, password);\n        const ethersHDNode = ethers.utils.HDNode.fromSeed(ethersSeed);\n        const wallet_hdpath = \"m/44'/60'/0'/0/\";\n        const fullPath = wallet_hdpath + importMnemonicIndex;\n        const ethersDerivedHDNode = ethersHDNode.derivePath(fullPath);\n        const ethersPrivateKey = ethersDerivedHDNode.privateKey;\n        setImportPrivatekey(ethersPrivateKey);\n      } else {\n        setImportPrivatekey();\n      }\n    };\n\n    calculatePK();\n  }, [importMnemonic, importMnemonicIndex, password]);\n  useEffect(() => {\n    const calculateAddress = async () => {\n      if (importPrivatekey) {\n        try {\n          const officialEthersWallet = new ethers.Wallet(importPrivatekey);\n          console.log(officialEthersWallet);\n          setImportAddress(officialEthersWallet.address);\n        } catch (e) {\n          console.log(e);\n          setImportAddress(\"\");\n        }\n      }\n    };\n\n    calculateAddress();\n  }, [importPrivatekey]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 21,\n        width: 420\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"IMPORT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        opacity: 0.5\n      },\n      children: \"mnemonic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input.Password, {\n      style: {\n        width: 380\n      },\n      size: \"large\",\n      placeholder: \"word1 word2 word3\",\n      onChange: async e => {\n        setImportMnemonic(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      style: {\n        width: 69\n      },\n      value: importMnemonicIndex,\n      onChange: e => {\n        setImportMnemonicIndex(e.target.value);\n      },\n      size: \"large\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input.Password, {\n      style: {\n        width: 380\n      },\n      size: \"large\",\n      placeholder: \"optional password\",\n      onChange: async e => {\n        setPassword(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 21,\n        width: 420\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"OR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        opacity: 0.5\n      },\n      children: \"private key\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input.Password, {\n      disabled: importMnemonic,\n      style: {\n        width: 420\n      },\n      size: \"large\",\n      value: importPrivatekey,\n      placeholder: \"0x...\",\n      onChange: e => {\n        setImportPrivatekey(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), importAddress ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 420,\n        height: 200\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          float: \"right\",\n          marginTop: 64\n        },\n        children: /*#__PURE__*/_jsxDEV(Address, {\n          value: importAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        float: \"right\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          marginTop: 16\n        },\n        disabled: !importPrivatekey || importMnemonic && importMnemonic.length < 7 //safety third!\n        ,\n        onClick: () => {\n          const currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\");\n\n          if (currentPrivateKey) {\n            window.localStorage.setItem(\"metaPrivateKey_backup\" + Date.now(), currentPrivateKey);\n          }\n\n          try {\n            const officialEthersWallet = new ethers.Wallet(importPrivatekey.trim());\n            console.log(officialEthersWallet);\n            setImportAddress(officialEthersWallet.address);\n            window.localStorage.setItem(\"metaPrivateKey\", importPrivatekey);\n            window.location.reload(); //setShowImport(!showImport)\n          } catch (e) {\n            console.log(e);\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            marginRight: 8\n          },\n          children: \"\\uD83D\\uDCBE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), \"Save\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        marginTop: 16\n      },\n      onClick: () => {\n        setShowImport(false);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          marginRight: 8\n        },\n        children: \"\\u23EA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), \"Cancel\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WalletImport, \"/tGHTtWZZe7ZuqiQ3ALTXv+eXsQ=\");\n\n_c = WalletImport;\n\nvar _c;\n\n$RefreshReg$(_c, \"WalletImport\");","map":{"version":3,"sources":["/home/leniu/dev/nft_escrow/packages/react-app/src/components/WalletImport.jsx"],"names":["ethers","React","useEffect","useState","Button","Input","Address","WalletImport","setShowImport","importMnemonic","setImportMnemonic","importMnemonicIndex","setImportMnemonicIndex","password","setPassword","importPrivatekey","setImportPrivatekey","importAddress","setImportAddress","calculatePK","ethersSeed","utils","mnemonicToSeed","ethersHDNode","HDNode","fromSeed","wallet_hdpath","fullPath","ethersDerivedHDNode","derivePath","ethersPrivateKey","privateKey","calculateAddress","officialEthersWallet","Wallet","console","log","address","e","marginTop","width","opacity","target","value","height","float","length","currentPrivateKey","window","localStorage","getItem","setItem","Date","now","trim","location","reload","marginRight"],"mappings":"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","sourcesContent":["import { ethers } from \"ethers\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { Button, Input } from \"antd\";\nimport Address from \"./Address\";\n\nexport default function WalletImport({ setShowImport }) {\n  const [importMnemonic, setImportMnemonic] = useState();\n  const [importMnemonicIndex, setImportMnemonicIndex] = useState(\"0\");\n  const [password, setPassword] = useState(\"\");\n  const [importPrivatekey, setImportPrivatekey] = useState();\n  const [importAddress, setImportAddress] = useState();\n\n  useEffect(() => {\n    const calculatePK = async () => {\n      if (importMnemonic) {\n        const ethersSeed = ethers.utils.mnemonicToSeed(importMnemonic, password);\n        const ethersHDNode = ethers.utils.HDNode.fromSeed(ethersSeed);\n\n        const wallet_hdpath = \"m/44'/60'/0'/0/\";\n        const fullPath = wallet_hdpath + importMnemonicIndex;\n\n        const ethersDerivedHDNode = ethersHDNode.derivePath(fullPath);\n        const ethersPrivateKey = ethersDerivedHDNode.privateKey;\n\n        setImportPrivatekey(ethersPrivateKey);\n      } else {\n        setImportPrivatekey();\n      }\n    };\n    calculatePK();\n  }, [importMnemonic, importMnemonicIndex, password]);\n\n  useEffect(() => {\n    const calculateAddress = async () => {\n      if (importPrivatekey) {\n        try {\n          const officialEthersWallet = new ethers.Wallet(importPrivatekey);\n          console.log(officialEthersWallet);\n          setImportAddress(officialEthersWallet.address);\n        } catch (e) {\n          console.log(e);\n          setImportAddress(\"\");\n        }\n      }\n    };\n    calculateAddress();\n  }, [importPrivatekey]);\n\n  return (\n    <div>\n      <div style={{ marginTop: 21, width: 420 }}>\n        <h2>IMPORT</h2>\n      </div>\n\n      <div style={{ opacity: 0.5 }}>mnemonic</div>\n      <Input.Password\n        style={{ width: 380 }}\n        size=\"large\"\n        placeholder=\"word1 word2 word3\"\n        onChange={async e => {\n          setImportMnemonic(e.target.value);\n        }}\n      />\n\n      <Input\n        style={{ width: 69 }}\n        value={importMnemonicIndex}\n        onChange={e => {\n          setImportMnemonicIndex(e.target.value);\n        }}\n        size=\"large\"\n      />\n\n      <Input.Password\n        style={{ width: 380 }}\n        size=\"large\"\n        placeholder=\"optional password\"\n        onChange={async e => {\n          setPassword(e.target.value);\n        }}\n      />\n\n      <div style={{ marginTop: 21, width: 420 }}>\n        <h4>OR</h4>\n      </div>\n\n      <div style={{ opacity: 0.5 }}>private key</div>\n      <Input.Password\n        disabled={importMnemonic}\n        style={{ width: 420 }}\n        size=\"large\"\n        value={importPrivatekey}\n        placeholder=\"0x...\"\n        onChange={e => {\n          setImportPrivatekey(e.target.value);\n        }}\n      />\n\n      <hr />\n\n      {importAddress ? (\n        <div style={{ width: 420, height: 200 }}>\n          <div style={{ float: \"right\", marginTop: 64 }}>\n            <Address value={importAddress} />\n          </div>\n          <hr />\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      <div style={{ float: \"right\" }}>\n        <Button\n          style={{ marginTop: 16 }}\n          disabled={!importPrivatekey || (importMnemonic && importMnemonic.length < 7)} //safety third!\n          onClick={() => {\n            const currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\");\n            if (currentPrivateKey) {\n              window.localStorage.setItem(\"metaPrivateKey_backup\" + Date.now(), currentPrivateKey);\n            }\n\n            try {\n              const officialEthersWallet = new ethers.Wallet(importPrivatekey.trim());\n              console.log(officialEthersWallet);\n              setImportAddress(officialEthersWallet.address);\n              window.localStorage.setItem(\"metaPrivateKey\", importPrivatekey);\n              window.location.reload();\n              //setShowImport(!showImport)\n            } catch (e) {\n              console.log(e);\n            }\n          }}\n        >\n          <span style={{ marginRight: 8 }}>💾</span>Save\n        </Button>\n      </div>\n\n      <Button\n        style={{ marginTop: 16 }}\n        onClick={() => {\n          setShowImport(false);\n        }}\n      >\n        <span style={{ marginRight: 8 }}>⏪</span>Cancel\n      </Button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}