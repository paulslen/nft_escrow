{"ast":null,"code":"var _jsxFileName = \"/home/leniu/dev/nft_escrow/packages/react-app/src/components/Wallet.jsx\",\n    _s = $RefreshSig$();\n\nimport { KeyOutlined, QrcodeOutlined, SendOutlined, WalletOutlined } from \"@ant-design/icons\";\nimport { Button, message, Modal, Spin, Tooltip, Typography } from \"antd\";\nimport { ethers } from \"ethers\";\nimport QR from \"qrcode.react\";\nimport React, { useEffect, useState } from \"react\";\nimport { Transactor } from \"../helpers\";\nimport Address from \"./Address\";\nimport AddressInput from \"./AddressInput\";\nimport Balance from \"./Balance\";\nimport EtherInput from \"./EtherInput\";\nimport WalletImport from \"./WalletImport\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Text\n} = Typography;\n/**\n  ~ What it does? ~\n\n  Displays a wallet where you can specify address and send USD/ETH, with options to\n  scan address, to convert between USD and ETH, to see and generate private keys,\n  to send, receive and extract the burner wallet\n\n  ~ How can I use? ~\n\n  <Wallet\n    provider={userProvider}\n    address={address}\n    ensProvider={mainnetProvider}\n    price={price}\n    color='red'\n  />\n\n  ~ Features ~\n\n  - Provide provider={userProvider} to display a wallet\n  - Provide address={address} if you want to specify address, otherwise\n                                                    your default address will be used\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\n  - Provide price={price} of ether and easily convert between USD and ETH\n  - Provide color to specify the color of wallet icon\n**/\n\nexport default function Wallet(props) {\n  _s();\n\n  const [signerAddress, setSignerAddress] = useState();\n  useEffect(() => {\n    async function getAddress() {\n      if (props.signer) {\n        const newAddress = await props.signer.getAddress();\n        setSignerAddress(newAddress);\n      }\n    }\n\n    getAddress();\n  }, [props.signer]);\n  const selectedAddress = props.address || signerAddress;\n  const [open, setOpen] = useState();\n  const [qr, setQr] = useState();\n  const [amount, setAmount] = useState();\n  const [toAddress, setToAddress] = useState();\n  const [pk, setPK] = useState();\n  const [showImport, setShowImport] = useState();\n  const providerSend = props.provider ? /*#__PURE__*/_jsxDEV(Tooltip, {\n    title: \"Wallet\",\n    children: /*#__PURE__*/_jsxDEV(WalletOutlined, {\n      onClick: () => {\n        setOpen(!open);\n      },\n      rotate: -90,\n      style: {\n        padding: props.padding ? props.padding : 7,\n        color: props.color ? props.color : \"\",\n        cursor: \"pointer\",\n        fontSize: props.size ? props.size : 28,\n        verticalAlign: \"middle\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this) : \"\";\n\n  const showImportButton = /*#__PURE__*/_jsxDEV(Button, {\n    style: {\n      marginTop: 16\n    },\n    onClick: () => {\n      setShowImport(true);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        marginRight: 8\n      },\n      children: \"\\uD83D\\uDCBE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), \"Import\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n\n  let display;\n  let receiveButton;\n  let privateKeyButton;\n\n  if (qr) {\n    display = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          copyable: true,\n          children: selectedAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(QR, {\n        value: selectedAddress,\n        size: \"450\",\n        level: \"H\",\n        includeMargin: true,\n        renderAs: \"svg\",\n        imageSettings: {\n          excavate: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n    receiveButton = /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        setQr(\"\");\n      },\n      children: [/*#__PURE__*/_jsxDEV(QrcodeOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), \" Hide\"]\n    }, \"hide\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this);\n    privateKeyButton = /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        setPK(selectedAddress);\n        setQr(\"\");\n      },\n      children: [/*#__PURE__*/_jsxDEV(KeyOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), \" Private Key\"]\n    }, \"hide\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this);\n  } else if (pk) {\n    const pk = localStorage.getItem(\"metaPrivateKey\");\n    const wallet = new ethers.Wallet(pk);\n\n    if (wallet.address !== selectedAddress) {\n      display = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"*injected account*, private key unknown\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this);\n    } else {\n      const extraPkDisplayAdded = {};\n      const extraPkDisplay = [];\n      extraPkDisplayAdded[wallet.address] = true;\n      extraPkDisplay.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: 16,\n          padding: 2,\n          backgroundStyle: \"#89e789\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/pk#\" + pk,\n          children: [/*#__PURE__*/_jsxDEV(Address, {\n            minimized: true,\n            address: wallet.address,\n            ensProvider: props.ensProvider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), \" \", wallet.address.substr(0, 6)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this));\n\n      for (const key in localStorage) {\n        if (key.indexOf(\"metaPrivateKey_backup\") >= 0) {\n          const pastpk = localStorage.getItem(key);\n          const pastwallet = new ethers.Wallet(pastpk);\n\n          if (!extraPkDisplayAdded[pastwallet.address]\n          /* && selectedAddress!=pastwallet.address */\n          ) {\n            extraPkDisplayAdded[pastwallet.address] = true;\n            extraPkDisplay.push( /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: 16\n              },\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/pk#\" + pastpk,\n                children: [/*#__PURE__*/_jsxDEV(Address, {\n                  minimized: true,\n                  address: pastwallet.address,\n                  ensProvider: props.ensProvider\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 19\n                }, this), \" \", pastwallet.address.substr(0, 6)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this));\n          }\n        }\n      }\n\n      const fullLink = \"https://punkwallet.io/pk#\" + pk;\n      display = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Private Key:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              style: {\n                fontSize: 11\n              },\n              copyable: true,\n              children: pk\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 16\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Punk Wallet:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              style: {\n                fontSize: 11\n              },\n              copyable: true,\n              children: fullLink\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            children: [\"Point your camera phone at qr code to open in \\xA0\", /*#__PURE__*/_jsxDEV(\"a\", {\n              target: \"_blank\",\n              href: fullLink,\n              rel: \"noopener noreferrer\",\n              children: \"Punk Wallet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              cursor: \"pointer\"\n            },\n            onClick: () => {\n              const el = document.createElement(\"textarea\");\n              el.value = fullLink;\n              document.body.appendChild(el);\n              el.select();\n              document.execCommand(\"copy\");\n              document.body.removeChild(el);\n              message.success( /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  position: \"relative\"\n                },\n                children: \"Copied Private Key Link\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 33\n              }, this));\n            },\n            children: /*#__PURE__*/_jsxDEV(QR, {\n              value: fullLink,\n              size: \"450\",\n              level: \"H\",\n              includeMargin: true,\n              renderAs: \"svg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), extraPkDisplay ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Known Private Keys:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this), extraPkDisplay, /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              const currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\");\n\n              if (currentPrivateKey) {\n                window.localStorage.setItem(\"metaPrivateKey_backup\" + Date.now(), currentPrivateKey);\n              }\n\n              const randomWallet = ethers.Wallet.createRandom();\n\n              const privateKey = randomWallet._signingKey().privateKey;\n\n              window.localStorage.setItem(\"metaPrivateKey\", privateKey);\n              window.location.reload();\n            },\n            children: \"Generate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this);\n    }\n\n    receiveButton = /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        setQr(selectedAddress);\n        setPK(\"\");\n      },\n      children: [/*#__PURE__*/_jsxDEV(QrcodeOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), \" Receive\"]\n    }, \"receive\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this);\n    privateKeyButton = /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        setPK(\"\");\n        setQr(\"\");\n      },\n      children: [/*#__PURE__*/_jsxDEV(KeyOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), \" Hide\"]\n    }, \"hide\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this);\n  } else {\n    const inputStyle = {\n      padding: 10\n    };\n    display = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: inputStyle,\n        children: /*#__PURE__*/_jsxDEV(AddressInput, {\n          autoFocus: true,\n          ensProvider: props.ensProvider,\n          placeholder: \"to address\",\n          address: toAddress,\n          onChange: setToAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: inputStyle,\n        children: /*#__PURE__*/_jsxDEV(EtherInput, {\n          price: props.price,\n          value: amount,\n          onChange: value => {\n            setAmount(value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this);\n    receiveButton = /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        setQr(selectedAddress);\n        setPK(\"\");\n      },\n      children: [/*#__PURE__*/_jsxDEV(QrcodeOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), \" Receive\"]\n    }, \"receive\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this);\n    privateKeyButton = /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        setPK(selectedAddress);\n        setQr(\"\");\n      },\n      children: [/*#__PURE__*/_jsxDEV(KeyOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), \" Private Key\"]\n    }, \"hide\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [providerSend, /*#__PURE__*/_jsxDEV(Modal, {\n      visible: open,\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [selectedAddress ? /*#__PURE__*/_jsxDEV(Address, {\n          address: selectedAddress,\n          ensProvider: props.ensProvider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 32\n        }, this) : /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 104\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            float: \"right\",\n            paddingRight: 25\n          },\n          children: /*#__PURE__*/_jsxDEV(Balance, {\n            address: selectedAddress,\n            provider: props.provider,\n            dollarMultiplier: props.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }, this),\n      onOk: () => {\n        setQr();\n        setPK();\n        setOpen(!open);\n      },\n      onCancel: () => {\n        setQr();\n        setPK();\n        setOpen(!open);\n      },\n      footer: showImport ? null : [showImportButton, privateKeyButton, receiveButton, /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        disabled: !amount || !toAddress || qr,\n        loading: false,\n        onClick: () => {\n          const tx = Transactor(props.signer || props.provider);\n          let value;\n\n          try {\n            value = ethers.utils.parseEther(\"\" + amount);\n          } catch (e) {\n            // failed to parseEther, try something else\n            value = ethers.utils.parseEther(\"\" + parseFloat(amount).toFixed(8));\n          }\n\n          tx({\n            to: toAddress,\n            value\n          });\n          setOpen(!open);\n          setQr();\n        },\n        children: [/*#__PURE__*/_jsxDEV(SendOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 19\n        }, this), \" Send\"]\n      }, \"submit\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 17\n      }, this)],\n      children: showImport ? /*#__PURE__*/_jsxDEV(WalletImport, {\n        setShowImport: setShowImport\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 23\n      }, this) : display\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 322,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Wallet, \"KWy6GCs0vAsfUlnQ+Ii0QIGXp/s=\");\n\n_c = Wallet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wallet\");","map":{"version":3,"sources":["/home/leniu/dev/nft_escrow/packages/react-app/src/components/Wallet.jsx"],"names":["KeyOutlined","QrcodeOutlined","SendOutlined","WalletOutlined","Button","message","Modal","Spin","Tooltip","Typography","ethers","QR","React","useEffect","useState","Transactor","Address","AddressInput","Balance","EtherInput","WalletImport","Text","Wallet","props","signerAddress","setSignerAddress","getAddress","signer","newAddress","selectedAddress","address","open","setOpen","qr","setQr","amount","setAmount","toAddress","setToAddress","pk","setPK","showImport","setShowImport","providerSend","provider","padding","color","cursor","fontSize","size","verticalAlign","showImportButton","marginTop","marginRight","display","receiveButton","privateKeyButton","excavate","localStorage","getItem","wallet","extraPkDisplayAdded","extraPkDisplay","push","backgroundStyle","ensProvider","substr","key","indexOf","pastpk","pastwallet","fullLink","el","document","createElement","value","body","appendChild","select","execCommand","removeChild","success","position","currentPrivateKey","window","setItem","Date","now","randomWallet","createRandom","privateKey","_signingKey","location","reload","inputStyle","price","float","paddingRight","tx","utils","parseEther","e","parseFloat","toFixed","to"],"mappings":"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","sourcesContent":["import { KeyOutlined, QrcodeOutlined, SendOutlined, WalletOutlined } from \"@ant-design/icons\";\nimport { Button, message, Modal, Spin, Tooltip, Typography } from \"antd\";\nimport { ethers } from \"ethers\";\nimport QR from \"qrcode.react\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { Transactor } from \"../helpers\";\nimport Address from \"./Address\";\nimport AddressInput from \"./AddressInput\";\nimport Balance from \"./Balance\";\nimport EtherInput from \"./EtherInput\";\nimport WalletImport from \"./WalletImport\";\n\nconst { Text } = Typography;\n\n/**\n  ~ What it does? ~\n\n  Displays a wallet where you can specify address and send USD/ETH, with options to\n  scan address, to convert between USD and ETH, to see and generate private keys,\n  to send, receive and extract the burner wallet\n\n  ~ How can I use? ~\n\n  <Wallet\n    provider={userProvider}\n    address={address}\n    ensProvider={mainnetProvider}\n    price={price}\n    color='red'\n  />\n\n  ~ Features ~\n\n  - Provide provider={userProvider} to display a wallet\n  - Provide address={address} if you want to specify address, otherwise\n                                                    your default address will be used\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\n  - Provide price={price} of ether and easily convert between USD and ETH\n  - Provide color to specify the color of wallet icon\n**/\n\nexport default function Wallet(props) {\n  const [signerAddress, setSignerAddress] = useState();\n  useEffect(() => {\n    async function getAddress() {\n      if (props.signer) {\n        const newAddress = await props.signer.getAddress();\n        setSignerAddress(newAddress);\n      }\n    }\n    getAddress();\n  }, [props.signer]);\n\n  const selectedAddress = props.address || signerAddress;\n\n  const [open, setOpen] = useState();\n  const [qr, setQr] = useState();\n  const [amount, setAmount] = useState();\n  const [toAddress, setToAddress] = useState();\n  const [pk, setPK] = useState();\n\n  const [showImport, setShowImport] = useState();\n\n  const providerSend = props.provider ? (\n    <Tooltip title=\"Wallet\">\n      <WalletOutlined\n        onClick={() => {\n          setOpen(!open);\n        }}\n        rotate={-90}\n        style={{\n          padding: props.padding ? props.padding : 7,\n          color: props.color ? props.color : \"\",\n          cursor: \"pointer\",\n          fontSize: props.size ? props.size : 28,\n          verticalAlign: \"middle\",\n        }}\n      />\n    </Tooltip>\n  ) : (\n    \"\"\n  );\n\n  const showImportButton = (\n    <Button\n      style={{ marginTop: 16 }}\n      onClick={() => {\n        setShowImport(true);\n      }}\n    >\n      <span style={{ marginRight: 8 }}>💾</span>Import\n    </Button>\n  );\n\n  let display;\n  let receiveButton;\n  let privateKeyButton;\n  if (qr) {\n    display = (\n      <div>\n        <div>\n          <Text copyable>{selectedAddress}</Text>\n        </div>\n        <QR\n          value={selectedAddress}\n          size=\"450\"\n          level=\"H\"\n          includeMargin\n          renderAs=\"svg\"\n          imageSettings={{ excavate: false }}\n        />\n      </div>\n    );\n    receiveButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setQr(\"\");\n        }}\n      >\n        <QrcodeOutlined /> Hide\n      </Button>\n    );\n    privateKeyButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setPK(selectedAddress);\n          setQr(\"\");\n        }}\n      >\n        <KeyOutlined /> Private Key\n      </Button>\n    );\n  } else if (pk) {\n    const pk = localStorage.getItem(\"metaPrivateKey\");\n    const wallet = new ethers.Wallet(pk);\n\n    if (wallet.address !== selectedAddress) {\n      display = (\n        <div>\n          <b>*injected account*, private key unknown</b>\n        </div>\n      );\n    } else {\n      const extraPkDisplayAdded = {};\n      const extraPkDisplay = [];\n      extraPkDisplayAdded[wallet.address] = true;\n      extraPkDisplay.push(\n        <div style={{ fontSize: 16, padding: 2, backgroundStyle: \"#89e789\" }}>\n          <a href={\"/pk#\" + pk}>\n            <Address minimized address={wallet.address} ensProvider={props.ensProvider} /> {wallet.address.substr(0, 6)}\n          </a>\n        </div>,\n      );\n      for (const key in localStorage) {\n        if (key.indexOf(\"metaPrivateKey_backup\") >= 0) {\n          const pastpk = localStorage.getItem(key);\n          const pastwallet = new ethers.Wallet(pastpk);\n          if (!extraPkDisplayAdded[pastwallet.address] /* && selectedAddress!=pastwallet.address */) {\n            extraPkDisplayAdded[pastwallet.address] = true;\n            extraPkDisplay.push(\n              <div style={{ fontSize: 16 }}>\n                <a href={\"/pk#\" + pastpk}>\n                  <Address minimized address={pastwallet.address} ensProvider={props.ensProvider} />{\" \"}\n                  {pastwallet.address.substr(0, 6)}\n                </a>\n              </div>,\n            );\n          }\n        }\n      }\n\n      const fullLink = \"https://punkwallet.io/pk#\" + pk;\n\n      display = (\n        <div>\n          <div>\n            <b>Private Key:</b>\n            <div>\n              <Text style={{ fontSize: 11 }} copyable>\n                {pk}\n              </Text>\n            </div>\n\n            <div style={{ marginTop: 16 }}>\n              <div>\n                <b>Punk Wallet:</b>\n              </div>\n              <Text style={{ fontSize: 11 }} copyable>\n                {fullLink}\n              </Text>\n            </div>\n\n            <br />\n            <i>\n              Point your camera phone at qr code to open in &nbsp;\n              <a target=\"_blank\" href={fullLink} rel=\"noopener noreferrer\">\n                Punk Wallet\n              </a>\n              :\n            </i>\n\n            <div\n              style={{ cursor: \"pointer\" }}\n              onClick={() => {\n                const el = document.createElement(\"textarea\");\n                el.value = fullLink;\n                document.body.appendChild(el);\n                el.select();\n                document.execCommand(\"copy\");\n                document.body.removeChild(el);\n                message.success(<span style={{ position: \"relative\" }}>Copied Private Key Link</span>);\n              }}\n            >\n              <QR value={fullLink} size=\"450\" level=\"H\" includeMargin renderAs=\"svg\" />\n            </div>\n          </div>\n\n          {extraPkDisplay ? (\n            <div>\n              <h3>Known Private Keys:</h3>\n              {extraPkDisplay}\n              <Button\n                onClick={() => {\n                  const currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\");\n                  if (currentPrivateKey) {\n                    window.localStorage.setItem(\"metaPrivateKey_backup\" + Date.now(), currentPrivateKey);\n                  }\n                  const randomWallet = ethers.Wallet.createRandom();\n                  const privateKey = randomWallet._signingKey().privateKey;\n                  window.localStorage.setItem(\"metaPrivateKey\", privateKey);\n                  window.location.reload();\n                }}\n              >\n                Generate\n              </Button>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      );\n    }\n\n    receiveButton = (\n      <Button\n        key=\"receive\"\n        onClick={() => {\n          setQr(selectedAddress);\n          setPK(\"\");\n        }}\n      >\n        <QrcodeOutlined /> Receive\n      </Button>\n    );\n    privateKeyButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setPK(\"\");\n          setQr(\"\");\n        }}\n      >\n        <KeyOutlined /> Hide\n      </Button>\n    );\n  } else {\n    const inputStyle = {\n      padding: 10,\n    };\n\n    display = (\n      <div>\n        <div style={inputStyle}>\n          <AddressInput\n            autoFocus\n            ensProvider={props.ensProvider}\n            placeholder=\"to address\"\n            address={toAddress}\n            onChange={setToAddress}\n          />\n        </div>\n        <div style={inputStyle}>\n          <EtherInput\n            price={props.price}\n            value={amount}\n            onChange={value => {\n              setAmount(value);\n            }}\n          />\n        </div>\n      </div>\n    );\n    receiveButton = (\n      <Button\n        key=\"receive\"\n        onClick={() => {\n          setQr(selectedAddress);\n          setPK(\"\");\n        }}\n      >\n        <QrcodeOutlined /> Receive\n      </Button>\n    );\n    privateKeyButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setPK(selectedAddress);\n          setQr(\"\");\n        }}\n      >\n        <KeyOutlined /> Private Key\n      </Button>\n    );\n  }\n\n  return (\n    <span>\n      {providerSend}\n      <Modal\n        visible={open}\n        title={\n          <div>\n            {selectedAddress ? <Address address={selectedAddress} ensProvider={props.ensProvider} /> : <Spin />}\n            <div style={{ float: \"right\", paddingRight: 25 }}>\n              <Balance address={selectedAddress} provider={props.provider} dollarMultiplier={props.price} />\n            </div>\n          </div>\n        }\n        onOk={() => {\n          setQr();\n          setPK();\n          setOpen(!open);\n        }}\n        onCancel={() => {\n          setQr();\n          setPK();\n          setOpen(!open);\n        }}\n        footer={\n          showImport\n            ? null\n            : [\n                showImportButton,\n                privateKeyButton,\n                receiveButton,\n                <Button\n                  key=\"submit\"\n                  type=\"primary\"\n                  disabled={!amount || !toAddress || qr}\n                  loading={false}\n                  onClick={() => {\n                    const tx = Transactor(props.signer || props.provider);\n\n                    let value;\n                    try {\n                      value = ethers.utils.parseEther(\"\" + amount);\n                    } catch (e) {\n                      // failed to parseEther, try something else\n                      value = ethers.utils.parseEther(\"\" + parseFloat(amount).toFixed(8));\n                    }\n\n                    tx({\n                      to: toAddress,\n                      value,\n                    });\n                    setOpen(!open);\n                    setQr();\n                  }}\n                >\n                  <SendOutlined /> Send\n                </Button>,\n              ]\n        }\n      >\n        {showImport ? <WalletImport setShowImport={setShowImport} /> : display}\n      </Modal>\n    </span>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}